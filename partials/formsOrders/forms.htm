<div class="">
    <ul class=" text-xs md:text-sm lg:text-md" x-data="{field: null}">
        <li class="my-2">
            <input hidden id="radioField4" x-model="field" type="radio" value="4">
            <label class="flex items-center " for="radioField4">
                <div
                    class="mr-3 rounded-full w-5 sm:w-6 md:h-7 h-5 sm:h-6 md:w-7 bg-gray-300 flex items-center justify-center">
                    <div x-show="field == 4" x-transition.opacity.scale
                        class="w-2 h-2 bg-white rounded-full"></div>
                </div>
                ОГЭ по английскому
            </label>
        </li>
        <li class="my-2">
            <input hidden id="radioField5" x-model="field" type="radio" value="5">
            <label class="flex items-center " for="radioField5">
                <div
                    class="mr-3 rounded-full w-5 sm:w-6 md:h-7 h-5 sm:h-6 md:w-7 bg-gray-300 flex items-center justify-center">
                    <div x-show="field == 5" x-transition.opacity.scale
                        class="w-2 h-2 bg-white rounded-full"></div>
                </div>
                ОГЭ по английскому
            </label>
        </li>


        <li class="my-2">
            <input hidden id="radioField6" x-model="field" type="radio" value="6">
            <label class="flex items-center " for="radioField6">
                <div
                    class="mr-3 rounded-full w-5 sm:w-6 md:h-7 h-5 sm:h-6 md:w-7 bg-gray-300 flex items-center justify-center">
                    <div x-show="field == 6" x-transition.opacity.scale
                        class="w-2 h-2 bg-white rounded-full"></div>
                </div>
                <input id="radioField6" class="bg-gray-100 rounded-md w-auto h-5 ms:h-6 md:h-7 lg:h-8  max-h-8 p-3 focus:outline-none text-xs ms:text-sm md:text-md" placeholder="Другое" type="text">
            </label>
        </li>
    </ul>
</div>
<div class="">
    <div class="relative w-full mb-4 z-10" x-data="{
            search: '',
            items: [],
            loading: false,
        }" x-init="$watch('search', async function () {
            loading = true;
            let response = await (await fetch(`/api/crazy/freelancer/v1.0.1/services?perPage=1000&with[]=category&search=${search}`)).json();
            items = response.data;
            loading = false;
        })">
        <div x-bind:style="{height: `${$refs.searchInput.offsetHeight}px`}"></div>
        <div class="rounded-lg border bg-white flex p-1 shadow-lg absolute top-0 inset-x-0 z-40"
            x-ref="searchInput" 
            @mouseover="hovered = true" 
            @mouseout="hovered = false" 
            @focusin="focused = true" 
            @focusout="focused = false">
            <input type="text" x-model="search"
                class="rounded-lg p-1  px-4 sm:p-2 w-full focus:outline-none text-xs sm:text-sm md:text-md lg:text-base"
                placeholder="Услуга или специалист" name="search"
                autocomplete="off">
            
        </div>
        <div x-cloak x-transition x-show="search.length > 0"
            class="absolute border top-0 inset-x-0 bg-white rounded-3xl overflow-hidden ">

            <ul class="overflow-y-auto" x-init="" :style="`max-height: ${window.innerHeight*.5}px;`">
                <li class="w-full mb-2" x-bind:style="{height: `${$refs.searchInput.offsetHeight}px`}">
                </li>
                <template x-for="index in (loading ? 10 : 0)">
                    <li class="p-2 px-4 cursor-pointer">
                        <div class="h-4 animate my-1 rounded-lg animate-pulse bg-gray-400"
                            :style="{width: `${100 + Math.random() * 100}px`}"></div>
                    </li>
                </template>
                <template x-if="items.length == 0">
                    <li x-text="search" class="p-2 px-4 hover:bg-gray-100 cursor-pointer" @click="window.location.href = '{{ 'make-order' | page({'category': 'raznoye'}) }}'"> </li>    
                </template>
                <template x-for="item in (!loading ? items: [])">
                    <li x-text="item.name" class="p-2 px-4 hover:bg-gray-100 cursor-pointer"  @click="window.location.href = `${item.category.length > 0 ? item.category[0].slug : 'raznoye'}/${item.slug}`"> </li>
                </template>

            </ul>
        </div>
    </div>
    <div class="mb-4">Например:</div>
        <div class="flex flex-wrap">
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Математика
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Английский язык
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Психология
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Уборка
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Математика
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Английский язык
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Психология
            </div>
            <div class="bg-gray-100 mr-1 mb-2 text-sm rounded-full py-2 px-3">
                Уборка
            </div>
            
        </div>
</div>
<div class="">
    <input  type="text"
            class="rounded-lg shadow-lg p-1 border mb-4 px-4 sm:p-3 w-full focus:outline-none text-xs sm:text-sm md:text-md lg:text-base"
            autocomplete="off">
    <div class="">
        <label class="flex items-center">
            <input type="checkbox" class="form-checkbox h-6 w-6 mr-3 text-red-600" />
            <span>Заниматься буду я</span>
        </label>
    </div>
</div>
<div class="">
    <div x-data="app()" class="z-10" x-init="[initDate(), getNoOfDays()]" x-cloak>
        <div class="mb-4 w-64 z-10">
            <label for="datepicker" class="font-semibold mb-2 block">Дата начала</label>
            <div class="relative">
                <input type="hidden" name="date" x-ref="date" />
                <input type="text" readonly x-model="datepickerValue" @click="showDatepicker = !showDatepicker" @keydown.escape="showDatepicker = false" class="w-full border pl-4 pr-10 py-4 leading-none rounded-lg shadow-sm focus:outline-none focus:shadow-outline font-medium" placeholder="Выберите дату" />
                <div class="absolute top-0 right-0 pr-4 py-4">
                    <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                </div>
                <div class="bg-white mt-12 rounded-lg shadow p-4 absolute top-2 left-0 w-full border" 
                     x-show.transition="showDatepicker" 
                     @click.away="showDatepicker = false">
                    <div class="flex justify-between items-center mb-2">
                        <div>
                            <span x-text="MONTH_NAMES[month]" class="text-lg font-bold text-gray-800"></span>
                            <span x-text="year" class="ml-1 text-lg text-gray-600 font-normal"></span>
                        </div>
                        <div>
                            <button type="button" class="transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full" 
                                    :class="{'cursor-not-allowed opacity-25': month == 0 }" 
                                    :disabled="month == 0 ? true : false" 
                                    @click="month--; getNoOfDays()">
                                <svg class="h-6 w-6 text-gray-500 inline-flex" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                </svg>
                            </button>
                            <button type="button" 
                                    class="transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full"
                                    :class="{'cursor-not-allowed opacity-25': month == 11 }" 
                                    :disabled="month == 11 ? true : false" 
                                    @click="month++; getNoOfDays()">
                                <svg class="h-6 w-6 text-gray-500 inline-flex" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                </svg>
                            </button>
                        </div>
                    </div>
                    <div class="flex flex-wrap mb-3 -mx-1">
                        <template x-for="(day, index) in DAYS" :key="index">
                            <div style="width: 14.26%" class="px-1">
                                <div x-text="day" class="text-gray-800 font-medium text-center text-xs"></div>
                            </div>
                        </template>
                    </div>
                    <div class="flex flex-wrap -mx-1">
                        <template x-for="blankday in blankdays">
                            <div style="width: 14.28%" class="text-center border p-1 border-transparent text-sm"></div>
                        </template>
                        <template x-for="(date, dateIndex) in no_of_days" :key="dateIndex">
                            <div style="width: 14.28%" class="px-1 mb-1">
                                <div @click="getDateValue(date)" x-text="date" class="cursor-pointer text-center text-sm leading-none rounded-full leading-loose transition ease-in-out duration-100" 
                                    :class="{'bg-blue-500 text-white': isToday(date) == true, 'text-gray-700 hover:bg-blue-200': isToday(date) == false }">
                                </div>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
    const MONTH_NAMES = [
        "Январь",
        "Февраль",
        "Март",
        "Апрель",
        "Май",
        "Июнь",
        "Июль",
        "Август",
        "Сентябрь",
        "Октябрь",
        "Ноябрь",
        "Декабрь",
    ];
    const DAYS = ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вск"];

    function app() {
        return {
            showDatepicker: false,
            datepickerValue: "",

            month: "",
            year: "",
            no_of_days: [],
            blankdays: [],
            days: ["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вск"],

            initDate() {
                let today = new Date();
                this.month = today.getMonth();
                this.year = today.getFullYear();
                this.datepickerValue = new Date(
                    this.year,
                    this.month,
                    today.getDate()
                ).toDateString();
            },

            isToday(date) {
                const today = new Date();
                const d = new Date(this.year, this.month, date);

                return today.toDateString() === d.toDateString() ? true : false;
            },

            getDateValue(date) {
                let selectedDate = new Date(this.year, this.month, date);
                this.datepickerValue = selectedDate.toDateString();

                this.$refs.date.value =
                    selectedDate.getFullYear() +
                    "-" +
                    ("0" + selectedDate.getMonth()).slice(-2) +
                    "-" +
                    ("0" + selectedDate.getDate()).slice(-2);

                console.log(this.$refs.date.value);

                this.showDatepicker = false;
            },

            getNoOfDays() {
                let daysInMonth = new Date(
                    this.year,
                    this.month + 1,
                    0
                ).getDate();

                // find where to start calendar day of week
                let dayOfWeek = new Date(this.year, this.month).getDay();
                let blankdaysArray = [];
                for (var i = 1; i <= dayOfWeek; i++) {
                    blankdaysArray.push(i);
                }

                let daysArray = [];
                for (var i = 1; i <= daysInMonth; i++) {
                    daysArray.push(i);
                }

                this.blankdays = blankdaysArray;
                this.no_of_days = daysArray;
            },
        };
    }
    </script>
</div>