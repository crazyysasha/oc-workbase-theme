[staticPage]
useContent = 1
default = 0

[localePicker]
forceUrl = 0
==
{##}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{this.page.title}}</title>
    {% component 'alternateHrefLangElements' %}
    <link rel="icon" type="image/png" sizes="32x32" href="{{ 'assets/images/favicon-32x32.png'|theme }}">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ 'assets/images/favicon-16x16.png'|theme }}">
    <link rel="stylesheet" href="{{[ 
        'assets/css/app.css',
        'assets/css/static-app.css', 
        '@framework.extras.css'
    ] | theme}}">
    <link rel="icon" href="{{ this.theme.favicon.path }}">
    <link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://unpkg.com/filepond/dist/filepond.min.css" rel="stylesheet">
    <link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{'assets/aeroport/stylesheet.css'|theme }}">
    <style>
        [x-cloak] { display: none !important; }
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
    </style>
    {% styles %}
</head>

<body  style="font-family: 'Aeroport';">

    {% partial "headers/default" %}
    <div id="static-style" class="container px-4 mx-auto py-12">
        {% page %}
    </div>
    {% partial "footers/default" %}

    {% placeholder modals %}


    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.directive('october', (
                el, {
                    value,
                    modifiers,
                    expression
                }, {
                    Alpine,
                    effect,
                    cleanup,
                    evaluate
                }) => {
                if (!el.hasOwnProperty('_x_october')) {
                    el._x_october = {
                        request: null,
                        url: null,
                        partials: {},
                        flash: false,

                    };
                }
                if (value == 'request') {
                    el._x_october.request = expression;
                    addListeners(el);

                }
                if (value == 'url') {
                    el._x_october.url = expression;
                }

                if (value == 'update') {

                    update = evaluate(`{ ${expression} }`);

                    el._x_october.update = {
                        ...el._x_october.update,
                        ...update
                    };
                }

                if (value == 'track-input') {
                    console.log(el.nodeName);
                    if (!['INPUT', 'TEXTAREA'].includes(el.nodeName)) {
                        throw new Error('input tracker used not in input or texarea tags');
                    }

                    if (el._x_october.request != null && el.form == null) {
                        throw new Error('input tracker used without form or x-october:request directive');
                    }


                    el.addEventListener('input', function (e) {
                        let trackedElement;
                        if (el.form)
                            trackedElement = el.form;
                        else
                            trackedElement = el;

                        if (trackedElement._x_inputTrackerTimer)
                            window.clearTimeout(trackedElement._x_inputTrackerTimer);


                        trackedElement._x_inputTrackerTimer = window.setTimeout(() => fetcher(trackedElement), expression);
                    });

                }

            });
            function fetcher(el) {
                fetch(el._x_october.url ?? window.location.href, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-OCTOBER-REQUEST-HANDLER': el._x_october.request,
                        'X-OCTOBER-REQUEST-PARTIALS': Object.keys(el._x_october.update).join('&'),
                        'X-Requested-With': 'XMLHttpRequest',
                        'X-XSRF-TOKEN': 'asd',
                    },
                }).then(response => {
                    return response.json();
                }).then(data => {
                    for (partial in data) {
                        let selector = el._x_october.update[partial] ?? partial;
                        
                        document.querySelector(selector).innerHTML = data[partial];
                    }
                });
            }
            function addListeners(el) {

                el.addEventListener('submit', async function (event) {
                    event.preventDefault();
                    console.log(event);
                    fetcher(el);
                });
            }
        })
    </script>

    <script defer src="https://unpkg.com/@alpinejs/persist@3.7.0/dist/cdn.min.js"></script>
    <script defer src="https://unpkg.com/alpinejs@3.7.0/dist/cdn.min.js"></script>
    <script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>
    <script src="{{ [
        '@jquery',
        '@framework',
        '@framework.extras',
        ]|theme }}">
        </script>
    <script src="https://unpkg.com/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.min.js"></script>

    <script src="https://unpkg.com/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.min.js"></script>

    <script src="https://unpkg.com/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.min.js"></script>

    <script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.js"></script>

    <script src="https://unpkg.com/filepond/dist/filepond.min.js"></script>


    {% scripts %}

</body>

</html>